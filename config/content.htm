<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Week 1</h1>
<p>創建cd2020的倉儲</p>
<p>創倉儲</p>
<p>步驟:</p>
<p>1.登入自己的Github創立一個叫cd2020的倉儲</p>
<p>2.執行git clone <a href="https://github.com/s40723126/cd2020">https://github.com/s40723126/cd2020</a>(自己的倉儲)</p>
<p>3.執行git submodule add<a href="https://github.com/mdecourse/cmsimde"> https://github.com/mdecourse/cmsimde</a>取得子模組</p>
<p>4.將cmsimde--&gt;up_dir中的所有東西複製到外面的cd2020裡</p>
<p>5.之後cd cmsimde 輸入python -m pip install flask_cors更改模組</p>
<p>6.執行python wsgi.py進入靜態網頁</p>
<h1>Week 2</h1>
<p>將python從3.7.3版本更新到3.8.2</p>
<p>從<a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a>這個網站中下載</p>
<p>windows x86-64 executable installer安裝至自己的可攜中<img alt="" height="698" src="/images/52.png" width="1241"/></p>
<p>將pip的選項取消掉</p>
<p><img alt="" height="412" src="/images/1.png" width="665"/></p>
<p>使用Scite.exe將原本3.7.3的路徑改成3.8.2</p>
<p><img alt="" height="665" src="/images/11.png" width="1096"/></p>
<p>執行get-pip.py(取得安裝管理程式)</p>
<p><img alt="" height="367" src="/images/456456.png" width="614"/></p>
<p><img alt="" height="369" src="/images/56565.png" width="613"/></p>
<p>執行pip install 指令將</p>
<p>Flask</p>
<p>Markdown</p>
<p>lxml</p>
<p>bs4</p>
<p>flask_cors</p>
<p>pelican</p>
<p>leo</p>
<p>這些python3.8.2缺少的模組給安裝下來</p>
<p></p>
<h1>小組會議</h1>
<p>Week3</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/c06esX1zO90" width="560"></iframe></p>
<p>Week4</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/lObYwRDd4Ro" width="560"></iframe></p>
<p>Week7</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/eC1SUyP3b2Q" width="560"></iframe></p>